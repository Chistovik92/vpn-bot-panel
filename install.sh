#!/bin/bash

# VPN Bot Panel - –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN Bot Panel..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
check_root() {
    if [[ $EUID -eq 0 ]]; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤: root –¥–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
    else
        log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ root –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø–æ–º–æ—â—å—é: sudo $0"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
check_platform() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        log_success "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Linux"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        log_error "macOS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        exit 1
    elif [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "win32" ]]; then
        log_error "Windows –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º"
        log_info "–î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ install.bat"
        exit 1
    else
        log_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $OSTYPE"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_system_packages() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
    if [ -f /etc/os-release ]; then
        source /etc/os-release
        case $ID in
            debian|ubuntu)
                log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω Debian/Ubuntu, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
                apt update
                apt install -y python3-venv python3-pip git jq curl
                ;;
            centos|rhel|fedora)
                log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω CentOS/RHEL/Fedora, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
                if command -v dnf >/dev/null 2>&1; then
                    dnf install -y python3-virtualenv python3-pip git jq curl
                else
                    yum install -y python3-virtualenv python3-pip git jq curl
                fi
                ;;
            arch|manjaro)
                log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω Arch/Manjaro, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
                pacman -Sy --noconfirm python python-pip git jq curl
                ;;
            *)
                log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $ID"
                log_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: python3-venv (–∏–ª–∏ python3-virtualenv), python3-pip, git, jq, curl"
                exit 1
                ;;
        esac
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: python3-venv (–∏–ª–∏ python3-virtualenv), python3-pip, git, jq, curl"
        exit 1
    fi
    
    log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git
check_git() {
    if ! command -v git &>/dev/null; then
        log_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
    log_success "Git –Ω–∞–π–¥–µ–Ω: $(git --version)"
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ jq
check_jq() {
    if ! command -v jq &>/dev/null; then
        log_error "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
    log_success "jq —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    return 0
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
setup_repository() {
    local repo_url="https://github.com/Chistovik92/vpn-bot-panel.git"
    local project_dir="vpn-bot-panel"
    
    if [ -d "$project_dir" ]; then
        log_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        cd "$project_dir"
        git pull origin main
        log_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏–∑ $repo_url..."
        git clone "$repo_url" "$project_dir"
        cd "$project_dir"
        log_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ñ–∞–π–ª—ã
    log_info "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    log_info "–§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    ls -la
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python
check_python() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python..."
    if command -v python3 &>/dev/null; then
        PYTHON_CMD="python3"
        log_success "Python 3 –Ω–∞–π–¥–µ–Ω: $(python3 --version)"
    elif command -v python &>/dev/null; then
        PYTHON_VERSION=$(python --version 2>&1)
        if [[ $PYTHON_VERSION == *"Python 3"* ]]; then
            PYTHON_CMD="python"
            log_success "Python –Ω–∞–π–¥–µ–Ω: $PYTHON_VERSION"
        else
            log_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω."
            exit 1
        fi
    else
        log_error "Python –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8 –∏–ª–∏ –≤—ã—à–µ."
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
check_python_version() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python..."
    PYTHON_VERSION=$($PYTHON_CMD -c "import sys; print('.'.join(map(str, sys.version_info[:3])))")
    REQUIRED_VERSION="3.8"
    
    $PYTHON_CMD -c "import sys; exit(0) if tuple(map(int, sys.version_info[:2])) >= tuple(map(int, '$REQUIRED_VERSION'.split('.'))) else exit(1)"
    
    if [ $? -eq 0 ]; then
        log_success "–í–µ—Ä—Å–∏—è Python $PYTHON_VERSION —Å–æ–≤–º–µ—Å—Ç–∏–º–∞"
    else
        log_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python $REQUIRED_VERSION –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
check_required_files() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    local required_files=("install.py" "database.py" "config.py" "requirements.txt")
    local missing_files=()
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            missing_files+=("$file")
        fi
    done
    
    if [ ${#missing_files[@]} -ne 0 ]; then
        log_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã: ${missing_files[*]}"
        return 1
    fi
    
    log_success "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
    return 0
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
create_venv() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python..."
    
    if [ ! -d "venv" ]; then
        # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if $PYTHON_CMD -m venv venv 2>/dev/null; then
            log_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
        else
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
            log_info "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
            install_system_packages
            
            # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
            log_info "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            if $PYTHON_CMD -m venv venv; then
                log_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤"
            else
                log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–∞–∂–µ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤"
                log_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
                log_info "Ubuntu/Debian: sudo apt install python3-venv"
                log_info "CentOS/RHEL: sudo yum install python3-virtualenv"
                exit 1
            fi
        fi
    else
        log_info "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
activate_venv() {
    if [ -f "venv/bin/activate" ]; then
        source venv/bin/activate
        PYTHON_CMD="venv/bin/python"
        log_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    elif [ -f "venv/Scripts/activate" ]; then
        source venv/Scripts/activate
        PYTHON_CMD="venv/Scripts/python"
        log_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    else
        log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–π Python"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip —Å–Ω–∞—á–∞–ª–∞
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    if ! $PYTHON_CMD -m pip install --upgrade pip; then
        log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å pip, –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π..."
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    if [ -f "requirements.txt" ]; then
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ requirements.txt..."
        if $PYTHON_CMD -m pip install -r requirements.txt; then
            log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
            log_info "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É..."
            
            # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –ø–æ –æ–¥–Ω–æ–º—É
            packages=(
                "python-telegram-bot==20.7"
                "yookassa==3.7.1" 
                "aiohttp==3.9.1"
                "cryptography==41.0.7"
                "sqlalchemy==2.0.23"
                "flask==2.3.3"
            )
            
            for package in "${packages[@]}"; do
                log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package..."
                if $PYTHON_CMD -m pip install "$package"; then
                    log_success "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω $package"
                else
                    log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $package"
                fi
            done
        fi
    else
        log_error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
run_installation() {
    log_info "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PYTHONPATH –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    export PYTHONPATH=$(pwd):$PYTHONPATH
    
    if $PYTHON_CMD install.py; then
        log_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
set_permissions() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º..."
    
    # –°–¥–µ–ª–∞—Ç—å Python —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
    chmod +x *.py 2>/dev/null || true
    
    # –°–¥–µ–ª–∞—Ç—å –≥–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    chmod +x Boot-main-ini 2>/dev/null || true
    
    # –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    mkdir -p data/vpn_configs data/backups logs
    chmod 755 data data/vpn_configs data/backups logs
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ -f "config.ini" ]; then
        chmod 600 config.ini
    fi
    
    if [ -f "data/vpn_bot.db" ]; then
        chmod 600 data/vpn_bot.db
    fi
    
    if [ -f "panel_config.json" ]; then
        chmod 600 panel_config.json
    fi
    
    log_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –±–æ—Ç–∞
create_bot_service() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –±–æ—Ç–∞..."
    
    local service_file="/etc/systemd/system/vpn-bot-panel.service"
    local working_dir=$(pwd)
    
    cat > "$service_file" << EOF
[Unit]
Description=VPN Bot Panel
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$working_dir
ExecStart=$working_dir/venv/bin/python bot.py
Restart=always
RestartSec=3
StandardOutput=file:$working_dir/logs/bot.log
StandardError=file:$working_dir/logs/bot-error.log

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable vpn-bot-panel.service
    log_success "Systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
create_admin_panel_service() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏..."
    
    local service_file="/etc/systemd/system/vpn-admin-panel.service"
    local working_dir=$(pwd)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç–∞
    local panel_port=5000
    if [ -f "panel_config.json" ]; then
        panel_port=$(jq -r '.admin_panel_port // 5000' panel_config.json)
    fi
    
    cat > "$service_file" << EOF
[Unit]
Description=VPN Admin Panel
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$working_dir
ExecStart=$working_dir/venv/bin/python admin_panel.py
Restart=always
RestartSec=3
StandardOutput=file:$working_dir/logs/admin-panel.log
StandardError=file:$working_dir/logs/admin-panel-error.log

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable vpn-admin-panel.service
    log_success "Systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏
    local panel_port=5000
    local panel_enabled=true
    if [ -f "panel_config.json" ]; then
        panel_port=$(jq -r '.admin_panel_port // 5000' panel_config.json)
        panel_enabled=$(jq -r '.admin_panel_enabled // true' panel_config.json)
    fi
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    if systemctl start vpn-bot-panel.service; then
        log_success "–°–µ—Ä–≤–∏—Å –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –±–æ—Ç–∞"
    fi
    
    # –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞
    if [ "$panel_enabled" = "true" ]; then
        if systemctl start vpn-admin-panel.service; then
            log_success "–°–µ—Ä–≤–∏—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∑–∞–ø—É—â–µ–Ω"
        else
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"
        fi
    else
        log_info "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
    fi
    
    sleep 2
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
    if systemctl is-active --quiet vpn-bot-panel.service; then
        log_success "–ë–æ—Ç: –∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–ë–æ—Ç: –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    if [ "$panel_enabled" = "true" ]; then
        if systemctl is-active --quiet vpn-admin-panel.service; then
            log_success "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É $panel_port"
        else
            log_error "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
        fi
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
show_final_instructions() {
    local panel_port=5000
    local panel_url="http://localhost:5000"
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -f "panel_config.json" ]; then
        panel_port=$(jq -r '.admin_panel_port // 5000' panel_config.json)
        panel_url=$(jq -r '.admin_panel_url // "http://localhost:5000"' panel_config.json)
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
    local server_ip=$(curl -s http://checkip.amazonaws.com || echo "localhost")
    
    echo ""
    log_success "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ config.ini"
    echo "   2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π: sudo ./Boot-main-ini"
    echo "   3. –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏: $panel_url"
    echo "   4. –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://$server_ip:$panel_port"
    echo ""
    echo "üîê –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
    echo "   - –†–µ–≥—É–ª—è—Ä–Ω–æ –º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    echo "   - –û–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–µ–≥—É–ª—è—Ä–Ω–æ"
    echo "   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
    echo "   - –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo ""
    echo "üí° –°–æ–≤–µ—Ç—ã:"
    echo "   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo ./Boot-main-ini –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π"
    echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ README.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"
    echo "   - –õ–æ–≥–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs/"
    echo "   - –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ systemd: systemctl start vpn-bot-panel"
    echo ""
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -f "install_credentials.txt" ]; then
        echo "üîë –°–æ–∑–¥–∞–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
        cat install_credentials.txt
        echo ""
        log_warning "‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
        echo ""
    fi
}

# –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    log_info "–ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN Bot Panel..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    check_root
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    check_platform
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (–≤–∫–ª—é—á–∞—è python3-venv)
    install_system_packages
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if ! check_git; then
        log_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."
        exit 1
    fi
    
    if ! check_jq; then
        log_error "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."
        exit 1
    fi
    
    setup_repository
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    if ! check_required_files; then
        log_error "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–∂–µ –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."
        log_info "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    check_python
    check_python_version
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    create_venv
    activate_venv
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies
    
    # –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    run_installation
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    set_permissions
    
    # –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤
    create_bot_service
    create_admin_panel_service
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_services
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_final_instructions
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"