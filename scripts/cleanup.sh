#!/bin/bash

set -e

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π..."

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

check_root() {
    if [[ $EUID -eq 0 ]]; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤: root"
    else
        log_error "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo $0"
        exit 1
    fi
}

show_disk_usage() {
    log_info "–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
    df -h
    echo ""
}

clean_apt_cache() {
    log_info "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ apt..."
    apt clean
    apt autoclean
    log_success "–ö—ç—à apt –æ—á–∏—â–µ–Ω"
}

remove_unused_packages() {
    log_info "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    apt autoremove --purge -y
    log_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã"
}

clean_logs() {
    log_info "–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤..."
    
    # –û—á–∏—Å—Ç–∫–∞ journal logs
    journalctl --vacuum-time=1d 2>/dev/null || true
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
    find /var/log -name "*.log" -type f -exec truncate -s 0 {} \; 2>/dev/null || true
    find /var/log -name "*.gz" -type f -delete 2>/dev/null || true
    find /var/log -name "*.1" -type f -delete 2>/dev/null || true
    
    log_success "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
}

clean_tmp() {
    log_info "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf /tmp/* /var/tmp/*
    log_success "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
}

remove_old_kernels() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä—ã—Ö —è–¥–µ—Ä..."
    
    if command -v dpkg > /dev/null; then
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —è–¥—Ä–æ
        current_kernel=$(uname -r | sed 's/-*[a-z]//g' | sed 's/-386//g')
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —è–¥—Ä–∞
        dpkg -l | grep 'linux-image' | awk '{print $2}' | while read kernel; do
            if [[ "$kernel" != *"$current_kernel"* ]]; then
                log_info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —è–¥—Ä–∞: $kernel"
                apt remove --purge -y "$kernel" 2>/dev/null || true
            fi
        done
        
        # –û—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —è–¥–µ—Ä
        dpkg -l | grep 'linux-headers' | awk '{print $2}' | while read headers; do
            if [[ "$headers" != *"$current_kernel"* ]]; then
                log_info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: $headers"
                apt remove --purge -y "$headers" 2>/dev/null || true
            fi
        done
        
        log_success "–°—Ç–∞—Ä—ã–µ —è–¥—Ä–∞ —É–¥–∞–ª–µ–Ω—ã"
    else
        log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–¥—Ä–∞ (–Ω–µ –Ω–∞–π–¥–µ–Ω dpkg)"
    fi
}

clean_package_cache() {
    log_info "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
    rm -f /var/lib/apt/lists/* 2>/dev/null || true
    apt update
    
    log_success "–ö—ç—à –ø–∞–∫–µ—Ç–æ–≤ –æ—á–∏—â–µ–Ω"
}

find_large_files() {
    log_info "–ü–æ–∏—Å–∫ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ (—Ç–æ–ø 20):"
    
    # –ò—â–µ–º –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã (–±–æ–ª—å—à–µ 100MB)
    find / -type f -size +100M -exec ls -lh {} \; 2>/dev/null | sort -k5 -hr | head -20 || true
    
    echo ""
    
    log_info "–ü–æ–∏—Å–∫ –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –≤ /var (—Ç–æ–ø 10):"
    du -sh /var/* 2>/dev/null | sort -hr | head -10 || true
}

check_disk_space() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞..."
    
    local available_kb=$(df / | awk 'NR==2 {print $4}')
    local available_mb=$((available_kb / 1024))
    local available_gb=$((available_mb / 1024))
    
    local required_mb=500  # –ú–∏–Ω–∏–º—É–º 500MB –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    
    if [ "$available_mb" -lt "$required_mb" ]; then
        log_error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞!"
        log_info "–î–æ—Å—Ç—É–ø–Ω–æ: ${available_mb} MB"
        log_info "–¢—Ä–µ–±—É–µ—Ç—Å—è: ${required_mb} MB"
        return 1
    else
        log_success "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: ${available_gb}.${available_mb} GB"
        return 0
    fi
}

main() {
    log_info "–ù–∞—á–∞–ª–æ –æ—á–∏—Å—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    check_root
    
    local initial_space=$(df / | awk 'NR==2 {print $4}')
    
    show_disk_usage
    clean_apt_cache
    remove_unused_packages
    clean_logs
    clean_tmp
    remove_old_kernels
    clean_package_cache
    
    local final_space=$(df / | awk 'NR==2 {print $4}')
    local freed_space=$((final_space - initial_space))
    local freed_mb=$((freed_space / 1024))
    
    show_disk_usage
    
    if [ "$freed_mb" -gt 0 ]; then
        log_success "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: ${freed_mb} MB"
    else
        log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ"
    fi
    
    if check_disk_space; then
        log_success "‚úÖ –ú–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏!"
    else
        log_error "‚ùå –ú–µ—Å—Ç–∞ –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
        find_large_files
        log_info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
        log_info "1. –£–¥–∞–ª–∏—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã"
        log_info "2. –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞"
        log_info "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ –¥—Ä—É–≥—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –±–æ–ª—å—à–∏–º –º–µ—Å—Ç–æ–º"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "check")
        check_disk_space
        ;;
    "large-files")
        find_large_files
        ;;
    "help"|"-h"|"--help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [command]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  check       - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ"
        echo "  large-files - –Ω–∞–π—Ç–∏ –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã"
        echo "  help        - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É"
        ;;
    *)
        main
        ;;
esac