#!/bin/bash

set -e

echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN Bot Panel —Å GitHub..."

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_URL="https://github.com/Chistovik92/vpn-bot-panel.git"
BRANCH="Dev_Bot-plan"
INSTALL_DIR="/opt/vpn-bot-panel"
TEMP_DIR="/tmp/vpn-bot-panel-install"

check_root() {
    if [[ $EUID -eq 0 ]]; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤: root"
    else
        log_error "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo bash <(curl -sSL https://raw.githubusercontent.com/Chistovik92/vpn-bot-panel/Dev_Bot-plan/install-from-github.sh)"
        exit 1
    fi
}

check_dependencies() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local missing_deps=()
    
    if ! command -v git &>/dev/null; then
        missing_deps+=("git")
    fi
    
    if ! command -v curl &>/dev/null; then
        missing_deps+=("curl")
    fi
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        log_warning "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing_deps[*]}"
        
        if command -v apt &>/dev/null; then
            apt update
            apt install -y "${missing_deps[@]}"
            log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            log_error "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é: ${missing_deps[*]}"
            exit 1
        fi
    else
        log_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

check_disk_space() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ..."
    
    local available_kb=$(df / | awk 'NR==2 {print $4}')
    local available_mb=$((available_kb / 1024))
    local min_space_mb=500
    
    if [ "$available_mb" -lt "$min_space_mb" ]; then
        log_error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞!"
        log_info "–î–æ—Å—Ç—É–ø–Ω–æ: ${available_mb} MB"
        log_info "–¢—Ä–µ–±—É–µ—Ç—Å—è: ${min_space_mb} MB"
        log_info ""
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É –¥–∏—Å–∫–∞:"
        log_info "sudo bash <(curl -sSL https://raw.githubusercontent.com/Chistovik92/vpn-bot-panel/Dev_Bot-plan/scripts/cleanup.sh)"
        exit 1
    else
        log_success "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: ${available_mb} MB"
    fi
}

download_repository() {
    log_info "–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$TEMP_DIR"
    mkdir -p "$TEMP_DIR"
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if git clone --branch "$BRANCH" --depth 1 "$REPO_URL" "$TEMP_DIR" 2>/dev/null; then
        log_success "–†–µ–ø–æ–∏–∑–∏—Ç–æ—Ä–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
        log_info "1. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GitHub"
        log_info "2. –ù–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏: $BRANCH"
        log_info "3. –ù–∞–ª–∏—á–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        exit 1
    fi
}

setup_installation() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if [ ! -d "$INSTALL_DIR" ]; then
        mkdir -p "$INSTALL_DIR"
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp -r "$TEMP_DIR"/app "$INSTALL_DIR"/
    cp -r "$TEMP_DIR"/scripts "$INSTALL_DIR"/
    cp -r "$TEMP_DIR"/templates "$INSTALL_DIR"/ 2>/dev/null || true
    cp -r "$TEMP_DIR"/static "$INSTALL_DIR"/ 2>/dev/null || true
    cp -r "$TEMP_DIR"/docs "$INSTALL_DIR"/ 2>/dev/null || true
    
    cp "$TEMP_DIR"/requirements.txt "$INSTALL_DIR"/
    cp "$TEMP_DIR"/config.ini.example "$INSTALL_DIR"/config.ini 2>/dev/null || true
    cp "$TEMP_DIR"/run.py "$INSTALL_DIR"/
    cp "$TEMP_DIR"/LICENSE "$INSTALL_DIR"/ 2>/dev/null || true
    cp "$TEMP_DIR"/README.md "$INSTALL_DIR"/ 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "$INSTALL_DIR/data" "$INSTALL_DIR/logs" "$INSTALL_DIR/backups"
    
    log_success "–§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ $INSTALL_DIR"
}

install_system_packages() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    if command -v apt &>/dev/null; then
        apt update
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
        apt install -y --no-install-recommends \
            python3 \
            python3-venv \
            python3-pip \
            sqlite3 \
            nginx \
            curl
        
        log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    elif command -v yum &>/dev/null; then
        yum install -y python3 python3-virtualenv python3-pip sqlite nginx curl
        log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.8+"
    fi
}

run_install_script() {
    log_info "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    cd "$INSTALL_DIR"
    
    if [ -f "scripts/install.sh" ]; then
        chmod +x scripts/install.sh
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
        ./scripts/install.sh --non-interactive
    else
        log_error "–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

cleanup_temp() {
    log_info "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf "$TEMP_DIR"
    log_success "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
}

show_quick_install() {
    log_info "üöÄ –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º)..."
    
    cd "$INSTALL_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
    cat > config.ini << 'EOF'
[DATABASE]
path = data/vpn_bot.db
backup_path = backups/

[BOT]
token = YOUR_BOT_TOKEN_HERE
admin_telegram_id = YOUR_ADMIN_ID

[WEB]
secret_key = $(python3 -c "import os; print(os.urandom(24).hex())")
host = 127.0.0.1
port = 5000
debug = False

[SECURITY]
auto_unban_interval_hours = 6
max_login_attempts = 5
session_timeout_minutes = 60
backup_retention_days = 7

[LOGGING]
level = INFO
file = logs/vpn_bot.log
max_size_mb = 10
backup_count = 5
EOF
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º venv –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    python3 -m venv venv
    source venv/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    python3 -c "import sys; sys.path.append('.'); from app.database import Database; db = Database(); db.init_db()"
    
    log_success "–ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

show_final_instructions() {
    echo ""
    log_success "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN Bot Panel –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    log_info "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
    echo "     sudo nano $INSTALL_DIR/config.ini"
    echo ""
    echo "  2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo ""
    echo "  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:"
    echo "     sudo systemctl start vpn-bot-panel"
    echo ""
    echo "  4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
    echo "     sudo systemctl status vpn-bot-panel"
    echo ""
    log_info "üåê –í–µ–±-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ:"
    echo "     http://–≤–∞—à-—Å–µ—Ä–≤–µ—Ä:5000"
    echo ""
    log_info "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "     $INSTALL_DIR/docs/"
    echo ""
}

main() {
    log_info "–ù–∞—á–∞–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å GitHub..."
    log_info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
    log_info "–í–µ—Ç–∫–∞: $BRANCH"
    log_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $INSTALL_DIR"
    
    check_root
    check_dependencies
    check_disk_space
    download_repository
    setup_installation
    install_system_packages
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ª–∏ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    if [[ " $* " == *" --non-interactive "* ]]; then
        show_quick_install
    else
        run_install_script
    fi
    
    cleanup_temp
    show_final_instructions
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --install-dir)
            INSTALL_DIR="$2"
            shift 2
            ;;
        --branch)
            BRANCH="$2"
            shift 2
            ;;
        --non-interactive)
            shift
            ;;
        --help|-h)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [OPTIONS]"
            echo ""
            echo "OPTIONS:"
            echo "  --install-dir DIR    –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: /opt/vpn-bot-panel)"
            echo "  --branch BRANCH      –í–µ—Ç–∫–∞ GitHub (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: Dev_Bot-plan)"
            echo "  --non-interactive    –ù–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"
            echo "  --help, -h           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  curl -sSL https://raw.githubusercontent.com/.../install-from-github.sh | sudo bash"
            echo "  curl -sSL ... | sudo bash -s -- --install-dir /opt/my-vpn --non-interactive"
            exit 0
            ;;
        *)
            log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
            exit 1
            ;;
    esac
done

main "$@"