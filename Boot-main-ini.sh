#!/bin/bash

# VPN Bot Panel - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
# –¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ root/sudo –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_header() {
    echo -e "${PURPLE}‚ú® $1${NC}"
}

log_menu() {
    echo -e "${CYAN}‚û°Ô∏è $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root/sudo
check_privileges() {
    if [[ $EUID -eq 0 ]]; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤: root –¥–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
    else
        log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ root/sudo –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø–æ–º–æ—â—å—é: sudo $0"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
check_platform() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        log_success "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Linux"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        log_error "macOS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        exit 1
    elif [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "win32" ]]; then
        log_error "Windows –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º"
        log_info "–î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ install.bat"
        exit 1
    else
        log_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $OSTYPE"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–Ω–µ–ª–∏
check_installation() {
    if [ -f "panel_config.json" ] && [ -d "venv" ]; then
        return 0
    else
        return 1
    fi
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏
load_panel_config() {
    if [ -f "panel_config.json" ]; then
        PANEL_PORT=$(jq -r '.admin_panel_port // 5000' panel_config.json)
        PANEL_URL=$(jq -r '.admin_panel_url // "http://localhost:5000"' panel_config.json)
        PANEL_ENABLED=$(jq -r '.admin_panel_enabled // true' panel_config.json)
    else
        PANEL_PORT=5000
        PANEL_URL="http://localhost:5000"
        PANEL_ENABLED=true
    fi
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏
save_panel_config() {
    cat > panel_config.json << EOF
{
    "admin_panel_port": $PANEL_PORT,
    "admin_panel_url": "$PANEL_URL",
    "admin_panel_enabled": $PANEL_ENABLED,
    "servers": [],
    "features": {
        "location_change": true,
        "connection_types": true,
        "auto_backup": true
    }
}
EOF
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    clear
    echo -e "${PURPLE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë           VPN BOT PANEL - –ú–ï–ù–Æ           ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë                                          ‚ïë"
    echo -e "‚ïë  ${GREEN}üöÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π${PURPLE}                   ‚ïë"
    echo -e "‚ïë  ${CYAN}1. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞${PURPLE}                            ‚ïë"
    echo -e "‚ïë  ${CYAN}2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞${PURPLE}                         ‚ïë"
    echo -e "‚ïë  ${CYAN}3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞${PURPLE}                        ‚ïë"
    echo -e "‚ïë  ${CYAN}4. –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã${PURPLE}                         ‚ïë"
    echo -e "‚ïë                                        ‚ïë"
    echo -e "‚ïë  ${GREEN}üëë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏${PURPLE}           ‚ïë"
    echo -e "‚ïë  ${CYAN}5. –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${PURPLE}                 ‚ïë"
    echo -e "‚ïë  ${CYAN}6. –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å${PURPLE}                        ‚ïë"
    echo -e "‚ïë  ${CYAN}7. –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤${PURPLE}                 ‚ïë"
    echo -e "‚ïë                                        ‚ïë"
    echo -e "‚ïë  ${GREEN}üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–Ω–µ–ª–∏${PURPLE}                       ‚ïë"
    echo -e "‚ïë  ${CYAN}8. –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏${PURPLE}                   ‚ïë"
    echo -e "‚ïë  ${CYAN}9. –ò–∑–º–µ–Ω–∏—Ç—å URL –ø–∞–Ω–µ–ª–∏${PURPLE}                    ‚ïë"
    echo -e "‚ïë  ${CYAN}10. –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å${PURPLE}             ‚ïë"
    echo -e "‚ïë                                        ‚ïë"
    echo -e "‚ïë  ${GREEN}üñ•Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏${PURPLE}                  ‚ïë"
    echo -e "‚ïë  ${CYAN}11. –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä${PURPLE}                       ‚ïë"
    echo -e "‚ïë  ${CYAN}12. –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä${PURPLE}                        ‚ïë"
    echo -e "‚ïë  ${CYAN}13. –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤${PURPLE}                       ‚ïë"
    echo -e "‚ïë                                        ‚ïë"
    echo -e "‚ïë  ${GREEN}üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏${PURPLE}                 ‚ïë"
    echo -e "‚ïë  ${CYAN}14. –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏${PURPLE}               ‚ïë"
    echo -e "‚ïë  ${CYAN}15. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞${PURPLE}                ‚ïë"
    echo -e "‚ïë  ${CYAN}16. –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ${PURPLE}                 ‚ïë"
    echo -e "‚ïë                                        ‚ïë"
    echo -e "‚ïë  ${GREEN}‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã${PURPLE}                      ‚ïë"
    echo -e "‚ïë  ${CYAN}17. –û–±–Ω–æ–≤–∏—Ç—å –ø–∞–Ω–µ–ª—å${PURPLE}                       ‚ïë"
    echo -e "‚ïë  ${CYAN}18. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–Ω–µ–ª—å${PURPLE}                 ‚ïë"
    echo -e "‚ïë  ${CYAN}19. –£–¥–∞–ª–∏—Ç—å –ø–∞–Ω–µ–ª—å${PURPLE}                        ‚ïë"
    echo -e "‚ïë  ${CYAN}0. –í—ã—Ö–æ–¥${PURPLE}                                 ‚ïë"
    echo "‚ïë                                          ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    
    load_panel_config
    
    echo -e "${YELLOW}üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:${NC}"
    if pgrep -f "python bot.py" > /dev/null; then
        echo -e "   –ë–æ—Ç: ${GREEN}–∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "   –ë–æ—Ç: ${RED}–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    echo -e "   –ü–∞–Ω–µ–ª—å: ${PANEL_URL}:${PANEL_PORT}"
    echo -e "   –°—Ç–∞—Ç—É—Å –ø–∞–Ω–µ–ª–∏: $([ "$PANEL_ENABLED" = "true" ] && echo -e "${GREEN}–≤–∫–ª—é—á–µ–Ω–∞${NC}" || echo -e "${RED}–≤—ã–∫–ª—é—á–µ–Ω–∞${NC}")"
    echo ""
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é (0-19): " choice
    case $choice in
        1) start_bot ;;
        2) stop_bot ;;
        3) restart_bot ;;
        4) system_status ;;
        5) create_admin ;;
        6) change_password ;;
        7) list_admins ;;
        8) change_panel_port ;;
        9) change_panel_url ;;
        10) toggle_panel ;;
        11) add_server ;;
        12) remove_server ;;
        13) list_servers ;;
        14) create_subscription ;;
        15) bot_features ;;
        16) backup_system ;;
        17) update_panel ;;
        18) reinstall_panel ;;
        19) uninstall_panel ;;
        0) exit 0 ;;
        *) log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; main_menu ;;
    esac
}

# –§—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—é

start_bot() {
    log_header "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
    if [ -d "venv" ]; then
        source venv/bin/activate
        nohup python bot.py > logs/bot.log 2>&1 &
        log_success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
        log_info "–õ–æ–≥–∏: logs/bot.log"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    sleep 2
    main_menu
}

stop_bot() {
    log_header "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
    pkill -f "python bot.py" && log_success "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || log_warning "–ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
    sleep 2
    main_menu
}

restart_bot() {
    log_header "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
    pkill -f "python bot.py" 2>/dev/null
    sleep 2
    if [ -d "venv" ]; then
        source venv/bin/activate
        nohup python bot.py > logs/bot.log 2>&1 &
        log_success "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    sleep 2
    main_menu
}

system_status() {
    log_header "–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    
    echo -e "\n${YELLOW}–ü—Ä–æ—Ü–µ—Å—Å—ã:${NC}"
    if pgrep -f "python bot.py" > /dev/null; then
        echo -e "   –ë–æ—Ç: ${GREEN}–∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "   –ë–æ—Ç: ${RED}–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    echo -e "\n${YELLOW}–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:${NC}"
    if [ -f "data/vpn_bot.db" ]; then
        DB_SIZE=$(du -h data/vpn_bot.db | cut -f1)
        echo -e "   –†–∞–∑–º–µ—Ä: $DB_SIZE"
        source venv/bin/activate
        USER_COUNT=$(python -c "from database import Database; db = Database(); print(sum(1 for _ in db.get_connection().cursor().execute('SELECT id FROM users')))" 2>/dev/null || echo "0")
        echo -e "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $USER_COUNT"
    else
        echo -e "   ${RED}–Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
    
    echo -e "\n${YELLOW}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
    load_panel_config
    echo -e "   –ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏: $PANEL_PORT"
    echo -e "   URL –ø–∞–Ω–µ–ª–∏: $PANEL_URL"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

create_admin() {
    log_header "–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: " telegram_id
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " username
    read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " password
    echo
    read -s -p "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " password_confirm
    echo
    
    if [ "$password" != "$password_confirm" ]; then
        log_error "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
        create_admin
    fi
    
    if [ -d "venv" ]; then
        source venv/bin/activate
        python -c "
import sys
sys.path.append('.')
from database import Database
from install import hash_password
db = Database()
password_hash = hash_password('$password')
try:
    with db.get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute('''
            INSERT OR REPLACE INTO admins 
            (telegram_id, username, password_hash, full_name, role, is_active)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', ($telegram_id, '$username', password_hash, 'Administrator', 'superadmin', True))
    print('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
except Exception as e:
    print('‚ùå –û—à–∏–±–∫–∞:', str(e))
"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

change_password() {
    log_header "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " username
    read -s -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: " password
    echo
    read -s -p "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " password_confirm
    echo
    
    if [ "$password" != "$password_confirm" ]; then
        log_error "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
        change_password
    fi
    
    if [ -d "venv" ]; then
        source venv/bin/activate
        python -c "
import sys
sys.path.append('.')
from database import Database
from install import hash_password
db = Database()
password_hash = hash_password('$password')
try:
    with db.get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute('UPDATE admins SET password_hash = ? WHERE username = ?', (password_hash, '$username'))
        if cursor.rowcount == 0:
            print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
        else:
            print('‚úÖ –ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
except Exception as e:
    print('‚ùå –û—à–∏–±–∫–∞:', str(e))
"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

list_admins() {
    log_header "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
    
    if [ -d "venv" ]; then
        source venv/bin/activate
        python -c "
import sys
sys.path.append('.')
from database import Database
db = Database()
try:
    with db.get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT username, telegram_id, role, created_date FROM admins WHERE is_active = 1')
        admins = cursor.fetchall()
        if admins:
            print('üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:')
            for admin in admins:
                print(f'   üë§ {admin[0]} (ID: {admin[1]})')
                print(f'      –†–æ–ª—å: {admin[2]}, –°–æ–∑–¥–∞–Ω: {admin[3]}')
                print()
        else:
            print('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
except Exception as e:
    print('‚ùå –û—à–∏–±–∫–∞:', str(e))
"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

change_panel_port() {
    log_header "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –ø–∞–Ω–µ–ª–∏"
    
    load_panel_config
    echo -e "–¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç: ${YELLOW}$PANEL_PORT${NC}"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ—Ä—Ç (1024-65535): " new_port
    
    if ! [[ "$new_port" =~ ^[0-9]+$ ]] || [ "$new_port" -lt 1024 ] || [ "$new_port" -gt 65535 ]; then
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1024 –¥–æ 65535"
        change_panel_port
    fi
    
    PANEL_PORT=$new_port
    save_panel_config
    log_success "–ü–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $new_port"
    log_info "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–∞–Ω–µ–ª–∏"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

change_panel_url() {
    log_header "–ò–∑–º–µ–Ω–µ–Ω–∏–µ URL –ø–∞–Ω–µ–ª–∏"
    
    load_panel_config
    echo -e "–¢–µ–∫—É—â–∏–π URL: ${YELLOW}$PANEL_URL${NC}"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://mydomain.com): " new_url
    
    PANEL_URL=$new_url
    save_panel_config
    log_success "URL –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $new_url"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

toggle_panel() {
    log_header "–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏"
    
    load_panel_config
    if [ "$PANEL_ENABLED" = "true" ]; then
        PANEL_ENABLED=false
        log_success "–ü–∞–Ω–µ–ª—å –≤—ã–∫–ª—é—á–µ–Ω–∞"
    else
        PANEL_ENABLED=true
        log_success "–ü–∞–Ω–µ–ª—å –≤–∫–ª—é—á–µ–Ω–∞"
    fi
    
    save_panel_config
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

add_server() {
    log_header "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞: " name
    read -p "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å: " ip
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç: " port
    read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø (wireguard/openvpn): " type
    read -p "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: " location
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 3x-ui API
    log_success "–°–µ—Ä–≤–µ—Ä $name –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫"
    log_warning "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 3x-ui –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

remove_server() {
    log_header "–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 3x-ui API
    log_warning "–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

list_servers() {
    log_header "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤"
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 3x-ui API
    log_warning "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

create_subscription() {
    log_header "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"
    
    if [ -d "venv" ]; then
        source venv/bin/activate
        python -c "
import secrets
import string
subscription_id = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(16))
print(f'üîó –°—Å—ã–ª–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: https://your-domain.com/subscribe/{subscription_id}')
print(f'üìã ID –ø–æ–¥–ø–∏—Å–∫–∏: {subscription_id}')
print('‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è')
"
    else
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

bot_features() {
    log_header "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"
    
    echo -e "\n${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:${NC}"
    echo "1. –°–º–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
    echo "2. –°–º–µ–Ω–∞ —Ç–∏–ø–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
    echo "3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "4. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (1-4): " feature_choice
    case $feature_choice in
        1) log_success "–°–º–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏–π: –≤–∫–ª—é—á–µ–Ω–æ";;
        2) log_success "–°–º–µ–Ω–∞ —Ç–∏–ø–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω–æ";;
        3) log_success "–ê–≤—Ç–æ-–±—ç–∫–∞–ø: –≤–∫–ª—é—á–µ–Ω–æ";;
        4) log_success "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω–æ";;
        *) log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä";;
    esac
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

backup_system() {
    log_header "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    
    BACKUP_DIR="backups/backup_$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    
    if [ -f "data/vpn_bot.db" ]; then
        cp "data/vpn_bot.db" "$BACKUP_DIR/" && log_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
    fi
    
    if [ -f "config.ini" ]; then
        cp "config.ini" "$BACKUP_DIR/" && log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
    fi
    
    if [ -d "data/vpn_configs" ]; then
        cp -r "data/vpn_configs" "$BACKUP_DIR/" && log_success "VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    fi
    
    log_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ $BACKUP_DIR"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

update_panel() {
    log_header "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏"
    
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git pull origin main
    
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    source venv/bin/activate
    pip install -r requirements.txt
    
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    python -c "from database import Database; db = Database(); db.init_db()"
    
    log_success "–ü–∞–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    main_menu
}

reinstall_panel() {
    log_header "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏"
    
    log_warning "–≠—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ, –Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç –∫–æ–¥ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm
    if [[ $confirm =~ ^[Yy]$ ]]; then
        ./install.sh
    else
        log_info "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
    
    main_menu
}

uninstall_panel() {
    log_header "–£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏"
    
    log_error "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –ø–∞–Ω–µ–ª—å –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!"
    read -p "–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ '–£–î–ê–õ–ò–¢–¨': " confirm
    
    if [ "$confirm" = "–£–î–ê–õ–ò–¢–¨" ]; then
        log_info "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è..."
        ./uninstall.sh
    else
        log_info "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        main_menu
    fi
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
init_system() {
    clear
    log_header "VPN Bot Panel - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    check_privileges
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    check_platform
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if ! check_installation; then
        log_error "–ü–∞–Ω–µ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ install.sh –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ panel_config.json –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "panel_config.json" ]; then
        save_panel_config
        log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    main_menu
}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
init_system "$@"