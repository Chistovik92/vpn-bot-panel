#!/usr/bin/env python3
"""
VPN Bot Panel - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Telegram –±–æ—Ç–∞
"""

import os
import sys
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from database import Database
    from config import Config
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.FileHandler('logs/bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

class VPNBot:
    def __init__(self):
        self.config = Config()
        self.db = Database()
        self.token = self.config.get_bot_token()
        
        if not self.token or self.token == 'YOUR_BOT_TOKEN_HERE':
            logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤ config.ini")
            sys.exit(1)
            
        self.application = Application.builder().token(self.token).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help))
        self.application.add_handler(CommandHandler("balance", self.balance))
        self.application.add_handler(CommandHandler("services", self.services))
    
    async def start(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        self.db.add_user(user.id, user.username, user.full_name)
        
        welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.full_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN Bot Panel!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
/services - –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        """
        
        await update.message.reply_text(welcome_text)
        logger.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.id} - {user.username}")
    
    async def help(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ VPN Bot Panel

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
/services - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ VPN —É—Å–ª—É–≥–∏

üí° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
1. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É
3. –ü–æ–ª—É—á–∏—Ç–µ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        """
        
        await update.message.reply_text(help_text)
    
    async def balance(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance"""
        user = update.effective_user
        user_data = self.db.get_user(user.id)
        
        if user_data:
            balance = user_data['balance']
            await update.message.reply_text(f"üí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ")
        else:
            await update.message.reply_text("‚ùå –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
    
    async def services(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /services"""
        try:
            with self.db.get_connection() as conn:
                cursor = conn.cursor()
                cursor.execute('SELECT name, description, price, duration_days FROM services WHERE is_active = 1')
                services = cursor.fetchall()
            
            if not services:
                await update.message.reply_text("‚ùå –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —É—Å–ª—É–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                return
            
            services_text = "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ VPN —É—Å–ª—É–≥–∏:\n\n"
            for service in services:
                name, description, price, duration = service
                services_text += f"üîπ {name}\n"
                services_text += f"   üìù {description}\n"
                services_text += f"   üí∞ –¶–µ–Ω–∞: {price} ‚ÇΩ\n"
                services_text += f"   ‚è±Ô∏è –°—Ä–æ–∫: {duration} –¥–Ω–µ–π\n\n"
            
            services_text += "üí° –î–ª—è –ø–æ–∫—É–ø–∫–∏ —É—Å–ª—É–≥–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            
            await update.message.reply_text(services_text)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥: {e}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ VPN Bot...")
        print("ü§ñ VPN Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        try:
            self.application.run_polling()
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    os.makedirs('logs', exist_ok=True)
    os.makedirs('data', exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot = VPNBot()
    bot.run()